/// generative grammar

function generateToBe() {
  let rules = {
    "start": "To be $phrase.",
    "phrase": "$noun-phrase [3]| $verb-phrase | $adj-phrase | $sentences [10]",
    "sentences": "$s1 | $s2 | $s3 | $s4 | $my1 [2] | $my2 [2] | $my3 [2] | $my4 [2]",
    "s1": "$det $adj2 $nn2 for $per-pro",
    "s2": "a $adj $nn for $vbg",
    "s3": "a $nn $prep $per-pro",
    "s4": "a $adj-comp $nn $prep $poss-pro $nn2",
    "my1": "loved for my $adj $nn | loved in $adv $vbg ways",
    "my2": "$adj and $adj2",
    "my3": "$adv $my2",
    "my4": "$color, to be a $color.nr() $nn",
    "noun-phrase": "$nns | $nn | $noun-single [10]",
    "noun-single": "a $nn | a good $nn [5]| a $adj $nn [3] | $prep $nn | $adj $prep $poss-pro $nn | one last $adj $nn [10]",
    "verb-phrase": "$verbs | $adv $verbs [10]",
    "verbs": "$vbg | $vbn",
    "color": colors,
    "adj-phrase": "$adj | $adj-comp | the $adj-sup | $adv $adj | $color $adj",
    "adv": RiTa.randomWord({ pos: "rb" }),
    "vb": RiTa.randomWord({ pos: "vb" }),
    "vbg": RiTa.randomWord({ pos: "vbg" }),
    "vbn": RiTa.randomWord({ pos: "vbn" }),
    "vbz": RiTa.randomWord({ pos: "vbz" }),
    "nns": RiTa.randomWord({ pos: "nns" }),
    "nn": RiTa.randomWord({ pos: "nn" }),
    "nn2": RiTa.randomWord({ pos: "nn" }),
    "adj": RiTa.randomWord({ pos: "jj" }),
    "adj2": RiTa.randomWord({ pos: "jj" }),
    "adj3": RiTa.randomWord({ pos: "jj" }),
    "adj-comp": RiTa.randomWord({ pos: "jjr" }),
    "adj-sup": RiTa.randomWord({ pos: "jjs" }),
    "prep": RiTa.randomWord({ pos: "in" }),
    "dt": RiTa.randomWord({ pos: "dt" }),
    "poss-pro": "my | your | our | their | his | her | its",
    "per-pro": "you | them | her | him | us",
    "det": "another | some | that | this | every | each"
  };

  let rg = RiTa.grammar(rules);
  let result = rg.expand();
  return result;
}





